/*
 * MmsVariableSelector.java
 *
 * Created on July 15, 2005, 9:50 PM
 */

package oui.mms.gui;

import gov.usgs.cawsc.gui.GuiUtilities;
import gov.usgs.cawsc.gui.WindowFactory;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import oui.mms.datatypes.Variable;
import oui.util.OuiHelp;

/**
 *
 * @author  markstro
 */
public class MmsRTGVariableSelector extends JPanel {
    private DefaultListModel selListModel = null;
    private boolean comboBoxModelFinished = true;
    public final static String nameControlString = "dispVar_names";
    public final static String indexControlString = "dispVar_element";
    public final static String plotControlString = "dispVar_plot";
    public final static String numPlotControlString = "ndispGraphs";
    private int plotSelection;
    private Mms mms;

    public MmsRTGVariableSelector(Mms mms, int plotSelection) {  //  This constructor for runtime graphs
        initComponents();
        this.mms = mms;
        this.plotSelection = plotSelection;

        DefaultListModel lm = new DefaultListModel();
        Iterator it = mms.getVariableSet().getVariables().keySet().iterator();
        while (it.hasNext()) lm.addElement(it.next());
        availList.setModel(lm);

        selListModel = new DefaultListModel();

        ArrayList<String> varNames = mms.getControlValues(nameControlString);
        ArrayList<String> varIndex = mms.getControlValues(indexControlString);
        ArrayList<String> varPlot = mms.getControlValues(plotControlString);

        for (int i = 0; i < varNames.size(); i++) {
            if ((plotSelection) == Integer.parseInt(varPlot.get(i))) {
                selListModel.addElement(varNames.get(i) + "[" + varIndex.get(i) + "]");
            }
        }
        selList.setModel(selListModel);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        listPanel = new javax.swing.JPanel();
        availPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        availList = new javax.swing.JList();
        describeButton = new javax.swing.JButton();
        selPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        selList = new javax.swing.JList();
        bottomPanel = new javax.swing.JPanel();
        buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();
        indexPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        indexComboBox = new javax.swing.JComboBox();

        availPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        availPanel.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Available Variables");
        availPanel.add(jLabel1, java.awt.BorderLayout.NORTH);

        availList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        availList.setOpaque(false);
        availList.setVisibleRowCount(10);
        availList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                availListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(availList);

        availPanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        describeButton.setText("Describe");
        describeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                describeButtonActionPerformed(evt);
            }
        });
        availPanel.add(describeButton, java.awt.BorderLayout.SOUTH);

        selPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        selPanel.setLayout(new java.awt.BorderLayout());

        jLabel3.setText("Selected Variables");
        selPanel.add(jLabel3, java.awt.BorderLayout.NORTH);

        jLabel4.setText("Select To Delete");
        selPanel.add(jLabel4, java.awt.BorderLayout.SOUTH);

        selList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        selList.setOpaque(false);
        selList.setVisibleRowCount(10);
        selList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                selListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(selList);

        selPanel.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout listPanelLayout = new javax.swing.GroupLayout(listPanel);
        listPanel.setLayout(listPanelLayout);
        listPanelLayout.setHorizontalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listPanelLayout.createSequentialGroup()
                .addComponent(availPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(selPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );
        listPanelLayout.setVerticalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(availPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(selPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
        );

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(okButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(cancelButton);

        helpButton.setText("Help");
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(helpButton);

        javax.swing.GroupLayout bottomPanelLayout = new javax.swing.GroupLayout(bottomPanel);
        bottomPanel.setLayout(bottomPanelLayout);
        bottomPanelLayout.setHorizontalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
        );
        bottomPanelLayout.setVerticalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jLabel5.setText("Index");

        indexComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indexComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout indexPanelLayout = new javax.swing.GroupLayout(indexPanel);
        indexPanel.setLayout(indexPanelLayout);
        indexPanelLayout.setHorizontalGroup(
            indexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indexPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(indexComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        indexPanelLayout.setVerticalGroup(
            indexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indexPanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(indexPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(indexComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bottomPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(indexPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(listPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(listPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(indexPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bottomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void selListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_selListValueChanged
        int index = selList.getSelectedIndex();
        if (index != -1) selListModel.remove(index);
    }//GEN-LAST:event_selListValueChanged

    private void indexComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indexComboBoxActionPerformed
        if (!comboBoxModelFinished) return;

        String sel = (String)(availList.getSelectedValue());
        if (sel == null) return;

        String index = (String)(indexComboBox.getSelectedItem());
        if (index == null) return;

        String foo;
        if (indexControlString == null) {
            foo = sel;
        } else {
            foo = sel + index;
        }

        if (!selListModel.contains(foo)) {
            selListModel.addElement(foo);
        }
    }//GEN-LAST:event_indexComboBoxActionPerformed

    private void describeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_describeButtonActionPerformed
    String sel = (String)(availList.getSelectedValue());
    if (sel == null) return;

    Variable mv = mms.getVariableSet().getVariable(sel);
    String foo = "Name: " + mv.getName() + "\n" +
                "Module: " + mv.getModule() + "\n" +
                "Description: " + mv.getDescription() + "\n" +
                "Dimension(s): " + mv.getDimension(0) + "\n" +
                "Units: " + mv.getUnits() + "\n" +
                "Type: " + mv.getType();


    JOptionPane.showMessageDialog(GuiUtilities.windowFor(this), foo);

    }//GEN-LAST:event_describeButtonActionPerformed

    private void availListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_availListValueChanged
        comboBoxModelFinished = false;
         indexComboBox.removeAllItems();

        String sel = (String)(availList.getSelectedValue());
        if (sel == null) return;

        Variable mv = mms.getVariableSet().getVariable(sel);
        int size = mv.getDimension(0).getSize();

        if (size == 1) {
            String foo = sel + "[1]";

            if (!selListModel.contains(foo)) {
                selListModel.addElement(foo);
            }
        } else{

            if (indexControlString == null) {
                ComboBoxModel model = indexComboBox.getModel();
                indexComboBox.addItem("ALL");

            } else {
                ComboBoxModel model = indexComboBox.getModel();
                for (int i = 0; i < size; i++) {
                    indexComboBox.addItem("[" + (i+1) + "]");
                }
            }
        }
        comboBoxModelFinished = true;
    }//GEN-LAST:event_availListValueChanged

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        exit();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        OuiHelp.OuiHelpFactory().showTopic ("");
    }//GEN-LAST:event_helpButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        ArrayList<String> varNames = mms.getControlValues(nameControlString);
        ArrayList<String> varIndex = mms.getControlValues(indexControlString);
        ArrayList<String> varPlot = mms.getControlValues(plotControlString);
        int numPlots = Integer.parseInt(mms.getControlValues(numPlotControlString).get(0));
/*
 *  Figure out new control array sizes
 */
        int newSize = selListModel.getSize();
        for (int i = 0; i < varPlot.size(); i++) {
            if (Integer.parseInt(varPlot.get(i)) != (plotSelection)) newSize++;
        }

        ArrayList<String> newVarNames = new ArrayList<String>(newSize);
        ArrayList<String> newVarIndex = new ArrayList<String>(newSize);
        ArrayList<String> newVarPlot = new ArrayList<String>(newSize);
/*
 * Copy in the values that are not from the selected plot
 */
        int ind = 0;

        for (int plot_index = 1; plot_index <= numPlots; plot_index++) {
            if (plot_index != plotSelection) {
                for (int i = 0; i < varPlot.size(); i++) {
                    if (Integer.parseInt(varPlot.get(i)) == plot_index) {
                        newVarNames.add(ind, varNames.get(i));
                        newVarIndex.add(ind, varIndex.get(i));
                        newVarPlot.add(ind++, varPlot.get(i));
                    }
                }

            } else {
/*
 *  Add the values for the selected plot
 */
                for (int j = 0; j < selListModel.getSize(); j++) {
                    String foo = (String)(selListModel.getElementAt(j));
                    newVarNames.add(ind, foo.substring(0, foo.indexOf('[')));
                    newVarIndex.add(ind, foo.substring(foo.indexOf('[')+1, foo.indexOf(']')));
                    newVarPlot.add(ind++, new String("" + plotSelection));
                }
            }
        }

        mms.setControlValues(nameControlString, newVarNames);
        mms.setControlValues(indexControlString, newVarIndex);
        mms.setControlValues(plotControlString, newVarPlot);

        exit();
    }//GEN-LAST:event_okButtonActionPerformed

    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        exit();
    }//GEN-LAST:event_exitForm

    private void exit() {
        WindowFactory.instance().closeWindow(this);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList availList;
    private javax.swing.JPanel availPanel;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton describeButton;
    private javax.swing.JButton helpButton;
    private javax.swing.JComboBox indexComboBox;
    private javax.swing.JPanel indexPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel listPanel;
    private javax.swing.JButton okButton;
    private javax.swing.JList selList;
    private javax.swing.JPanel selPanel;
    // End of variables declaration//GEN-END:variables

}
