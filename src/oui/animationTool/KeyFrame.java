/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * KeyFrame.java
 *
 * Created on Jun 1, 2012, 8:23:08 AM
 */

package oui.animationTool;

import java.awt.Color;
import javax.swing.JPanel;

/**
 *
 * @author markstro
 */
public class KeyFrame extends JPanel {
    private final int numBins;
    private double min;
    private double max;
    private ColorRange cr;
    private final AnimationToolGui atg;

    /** Creates new form KeyFrame */
    public KeyFrame(int numBins, double min, double max, AnimationToolGui atg) {
        this.numBins = numBins;
        this.min = min;
        this.max = max;
        this.atg = atg;

        initComponents();
        setColors ();
    }

    private void setColors () {
        cr = new ColorRange (numBins, min, max);
        Color[] colors = cr.getBinColors();
        String[] strings = cr.getBinStrings();

        int i = 9;
        maxTextField.setBackground(colors[i]);
        maxTextField.setText(strings[i--]);

        jLabel1.setBackground(colors[i]);
        jLabel1.setText(strings[i--]);

        jLabel2.setBackground(colors[i]);
        jLabel2.setText(strings[i--]);

        jLabel3.setBackground(colors[i]);
        jLabel3.setText(strings[i--]);

        jLabel4.setBackground(colors[i]);
        jLabel4.setText(strings[i--]);

        jLabel5.setBackground(colors[i]);
        jLabel5.setText(strings[i--]);

        jLabel6.setBackground(colors[i]);
        jLabel6.setText(strings[i--]);

        jLabel7.setBackground(colors[i]);
        jLabel7.setText(strings[i--]);

        jLabel8.setBackground(colors[i]);
        jLabel8.setText(strings[i--]);

        minTextField.setBackground(colors[i]);
        minTextField.setText(strings[i--]);

        // If the key has changed, the map must be updated.
        if (atg != null) {
            atg.keyChanged(cr);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        maxTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        minTextField = new javax.swing.JTextField();

        setLayout(new java.awt.GridLayout(10, 1));

        maxTextField.setBackground(new java.awt.Color(255, 0, 0));
        maxTextField.setText("1.0");
        maxTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxTextFieldActionPerformed(evt);
            }
        });
        add(maxTextField);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("jLabel1");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel1.setOpaque(true);
        add(jLabel1);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("jLabel2");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel2.setOpaque(true);
        add(jLabel2);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("jLabel3");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel3.setOpaque(true);
        add(jLabel3);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("jLabel4");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel4.setOpaque(true);
        add(jLabel4);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("jLabel5");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel5.setOpaque(true);
        add(jLabel5);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("jLabel6");
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel6.setOpaque(true);
        add(jLabel6);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("jLabel7");
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel7.setOpaque(true);
        add(jLabel7);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("jLabel8");
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel8.setOpaque(true);
        add(jLabel8);

        minTextField.setBackground(new java.awt.Color(0, 255, 255));
        minTextField.setText("0.0");
        minTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minTextFieldActionPerformed(evt);
            }
        });
        add(minTextField);
    }// </editor-fold>//GEN-END:initComponents

    private void maxTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxTextFieldActionPerformed
        double foo = parseNumber (maxTextField.getText());
        if ((foo != Double.NaN) && foo > min) {
            max = foo;
        }
        setColors ();
    }//GEN-LAST:event_maxTextFieldActionPerformed

    private void minTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minTextFieldActionPerformed
        double foo = parseNumber(minTextField.getText());
        if ((foo != Double.NaN) && foo < max) {
            min = foo;
        }
        setColors();
    }//GEN-LAST:event_minTextFieldActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // If the key window closes (user clicked on X) then uncheck the "show key"
        // radio box in the AnimationToolGui
        if (atg != null) {
            atg.setShowKeyBoxSelection(false);
        }
    }//GEN-LAST:event_formWindowClosed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField maxTextField;
    private javax.swing.JTextField minTextField;
    // End of variables declaration//GEN-END:variables

    private double parseNumber(String text) {
        String newText = null;

        int index = text.indexOf('<');
        if (index > -1) {
            newText = text.substring(index+1);
        }

        index = text.indexOf('>');
        if (index > -1) {
            newText = text.substring(index+1);
        }

        if (newText == null) {
            newText = text;
        }

        double ret = Double.NaN;

        try {
            ret = Double.parseDouble(newText.trim());
        } catch (Exception e) {
            System.out.println (e.toString());
        }
        return ret;
    }
}
